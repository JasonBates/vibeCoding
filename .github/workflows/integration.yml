name: Integration Tests

# This workflow runs integration tests manually or on specific triggers
# It's separate from the main test workflow to avoid running expensive tests on every push

on:
  workflow_dispatch:  # Manual trigger only
  push:
    branches: [ main ]
    paths: [ 'tests/integration/**' ]  # Only when integration tests change
  pull_request:
    branches: [ main ]
    paths: [ 'tests/integration/**' ]

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run pre-commit hooks
      run: pre-commit run --all-files

  integration-tests:
    runs-on: ubuntu-latest
    needs: pre-commit  # Only run if pre-commit passes

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run integration tests
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        # Check if API key is available
        if [ -z "$OPENAI_API_KEY" ]; then
          echo "⚠️  OPENAI_API_KEY secret not set. Skipping integration tests."
          echo "To run integration tests:"
          echo "1. Go to Settings → Secrets and variables → Actions"
          echo "2. Add OPENAI_API_KEY secret with your OpenAI API key"
          echo "3. Re-run this workflow"
          exit 0
        fi

        echo "✅ OPENAI_API_KEY found. Running integration tests..."
        # Run only integration tests
        pytest tests/integration/ -v --tb=short

        # Optional: Run with coverage for integration tests
        # pytest tests/integration/ -v --cov=. --cov-report=xml

    - name: Upload integration test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: integration-test-results
        path: |
          .coverage
          htmlcov/
        retention-days: 7
